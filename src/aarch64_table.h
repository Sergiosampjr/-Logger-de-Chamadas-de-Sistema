case 0: return "io_setup";
case 1: return "io_destroy";
case 2: return "io_submit";
case 3: return "io_cancel";
case 4: return "io_getevents";
case 5: return "setxattr";
case 6: return "lsetxattr";
case 7: return "fsetxattr";
case 8: return "getxattr";
case 9: return "lgetxattr";
case 10: return "fgetxattr";
case 11: return "listxattr";
case 12: return "llistxattr";
case 13: return "flistxattr";
case 14: return "removexattr";
case 15: return "lremovexattr";
case 16: return "fremovexattr";
case 17: return "getcwd";
case 18: return "lookup_dcookie";
case 19: return "eventfd2";
case 20: return "epoll_create1";
case 21: return "epoll_ctl";
case 22: return "epoll_pwait";
case 23: return "dup";
case 24: return "dup3";
case 25: return "fcntl";
case 26: return "inotify_init1";
case 27: return "inotify_add_watch";
case 28: return "inotify_rm_watch";
case 29: return "ioctl";
case 30: return "ioprio_set";
case 31: return "ioprio_get";
case 32: return "flock";
case 33: return "mknodat";
case 34: return "mkdirat";
case 35: return "unlinkat";
case 36: return "symlinkat";
case 37: return "linkat";
case 38: return "renameat";
case 39: return "umount2";
case 40: return "mount";
case 41: return "pivot_root";
case 42: return "nfsservctl";
case 43: return "statfs";
case 44: return "fstatfs";
case 45: return "truncate";
case 46: return "ftruncate";
case 47: return "fallocate";
case 48: return "faccessat";
case 49: return "chdir";
case 50: return "fchdir";
case 51: return "chroot";
case 52: return "fchmod";
case 53: return "fchmodat";
case 54: return "fchownat";
case 55: return "fchown";
case 56: return "openat";
case 57: return "close";
case 58: return "vhangup";
case 59: return "pipe2";
case 60: return "quotactl";
case 61: return "getdents64";
case 62: return "lseek";
case 63: return "read";
case 64: return "write";
case 65: return "readv";
case 66: return "writev";
case 67: return "pread64";
case 68: return "pwrite64";
case 69: return "preadv";
case 70: return "pwritev";
case 71: return "sendfile";
case 72: return "pselect6";
case 73: return "ppoll";
case 74: return "signalfd4";
case 75: return "vmsplice";
case 76: return "splice";
case 77: return "tee";
case 78: return "readlinkat";
case 79: return "newfstatat";
case 80: return "fstat";
case 81: return "sync";
case 82: return "fsync";
case 83: return "fdatasync";
case 84: return "sync_file_range";
case 85: return "timerfd_create";
case 86: return "timerfd_settime";
case 87: return "timerfd_gettime";
case 88: return "utimensat";
case 89: return "acct";
case 90: return "capget";
case 91: return "capset";
case 92: return "personality";
case 93: return "exit";
case 94: return "exit_group";
case 95: return "waitid";
case 96: return "set_tid_address";
case 97: return "unshare";
case 98: return "futex";
case 99: return "set_robust_list";
case 100: return "get_robust_list";
case 101: return "nanosleep";
case 102: return "getitimer";
case 103: return "setitimer";
case 104: return "kexec_load";
case 105: return "init_module";
case 106: return "delete_module";
case 107: return "timer_create";
case 108: return "timer_gettime";
case 109: return "timer_getoverrun";
case 110: return "timer_settime";
case 111: return "timer_delete";
case 112: return "clock_settime";
case 113: return "clock_gettime";
case 114: return "clock_getres";
case 115: return "clock_nanosleep";
case 116: return "syslog";
case 117: return "ptrace";
case 118: return "sched_setparam";
case 119: return "sched_setscheduler";
case 120: return "sched_getscheduler";
case 121: return "sched_getparam";
case 122: return "sched_setaffinity";
case 123: return "sched_getaffinity";
case 124: return "sched_yield";
case 125: return "sched_get_priority_max";
case 126: return "sched_get_priority_min";
case 127: return "sched_rr_get_interval";
case 128: return "restart_syscall";
case 129: return "kill";
case 130: return "tkill";
case 131: return "tgkill";
case 132: return "sigaltstack";
case 133: return "rt_sigsuspend";
case 134: return "rt_sigaction";
case 135: return "rt_sigprocmask";
case 136: return "rt_sigpending";
case 137: return "rt_sigtimedwait";
case 138: return "rt_sigqueueinfo";
case 139: return "rt_sigreturn";
case 140: return "setpriority";
case 141: return "getpriority";
case 142: return "reboot";
case 143: return "setregid";
case 144: return "setgid";
case 145: return "setreuid";
case 146: return "setuid";
case 147: return "setresuid";
case 148: return "getresuid";
case 149: return "setresgid";
case 150: return "getresgid";
case 151: return "setfsuid";
case 152: return "setfsgid";
case 153: return "times";
case 154: return "setpgid";
case 155: return "getpgid";
case 156: return "getsid";
case 157: return "setsid";
case 158: return "getgroups";
case 159: return "setgroups";
case 160: return "uname";
case 161: return "sethostname";
case 162: return "setdomainname";
case 163: return "getrlimit";
case 164: return "setrlimit";
case 165: return "getrusage";
case 166: return "umask";
case 167: return "prctl";
case 168: return "getcpu";
case 169: return "gettimeofday";
case 170: return "settimeofday";
case 171: return "adjtimex";
case 172: return "getpid";
case 173: return "getppid";
case 174: return "getuid";
case 175: return "geteuid";
case 176: return "getgid";
case 177: return "getegid";
case 178: return "gettid";
case 179: return "sysinfo";
case 180: return "mq_open";
case 181: return "mq_unlink";
case 182: return "mq_timedsend";
case 183: return "mq_timedreceive";
case 184: return "mq_notify";
case 185: return "mq_getsetattr";
case 186: return "msgget";
case 187: return "msgctl";
case 188: return "msgrcv";
case 189: return "msgsnd";
case 190: return "semget";
case 191: return "semctl";
case 192: return "semtimedop";
case 193: return "semop";
case 194: return "shmget";
case 195: return "shmctl";
case 196: return "shmat";
case 197: return "shmdt";
case 198: return "socket";
case 199: return "socketpair";
case 200: return "bind";
case 201: return "listen";
case 202: return "accept";
case 203: return "connect";
case 204: return "getsockname";
case 205: return "getpeername";
case 206: return "sendto";
case 207: return "recvfrom";
case 208: return "setsockopt";
case 209: return "getsockopt";
case 210: return "shutdown";
case 211: return "sendmsg";
case 212: return "recvmsg";
case 213: return "readahead";
case 214: return "brk";
case 215: return "munmap";
case 216: return "mremap";
case 217: return "add_key";
case 218: return "request_key";
case 219: return "keyctl";
case 220: return "clone";
case 221: return "execve";
case 222: return "mmap";
case 223: return "fadvise64";
case 224: return "swapon";
case 225: return "swapoff";
case 226: return "mprotect";
case 227: return "msync";
case 228: return "mlock";
case 229: return "munlock";
case 230: return "mlockall";
case 231: return "munlockall";
case 232: return "mincore";
case 233: return "madvise";
case 234: return "remap_file_pages";
case 235: return "mbind";
case 236: return "get_mempolicy";
case 237: return "set_mempolicy";
case 238: return "migrate_pages";
case 239: return "move_pages";
case 240: return "rt_tgsigqueueinfo";
case 241: return "perf_event_open";
case 242: return "accept4";
case 243: return "recvmmsg";
case 260: return "wait4";
case 261: return "prlimit64";
case 262: return "fanotify_init";
case 263: return "fanotify_mark";
case 264: return "name_to_handle_at";
case 265: return "open_by_handle_at";
case 266: return "clock_adjtime";
case 267: return "syncfs";
case 268: return "setns";
case 269: return "sendmmsg";
case 270: return "process_vm_readv";
case 271: return "process_vm_writev";
case 272: return "kcmp";
case 273: return "finit_module";
case 274: return "sched_setattr";
case 275: return "sched_getattr";
case 276: return "renameat2";
case 277: return "seccomp";
case 278: return "getrandom";
case 279: return "memfd_create";
case 280: return "bpf";
case 281: return "execveat";
case 282: return "userfaultfd";
case 283: return "membarrier";
case 284: return "mlock2";
case 285: return "copy_file_range";
case 286: return "preadv2";
case 287: return "pwritev2";
case 288: return "pkey_mprotect";
case 289: return "pkey_alloc";
case 290: return "pkey_free";
case 291: return "statx";
case 292: return "io_pgetevents";
case 293: return "rseq";
case 436: return "close_range";